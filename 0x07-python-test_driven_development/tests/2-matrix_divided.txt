>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix2 = [[1,"2", 3], [4, 5, 6]]
>>> matrix3 = [[1, 3, 5]]

>>> matrix_divided(None, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    m = [row[:] for row in matrix]
TypeError: 'NoneType' object is not iterable

>>> matrix_divided(3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(matrix, 10.3)
[[0.1, 0.19, 0.29], [0.39, 0.49, 0.58]]

>>> matrix_divided(matrix, "10,3")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    raise TypeError("div must be a number")
TypeError: div must be a number

>>> matrix_divided(matrix2, 10.3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
    raise TypeError("matrix must be a matrix (list\
TypeError: matrix must be a matrix (list of lists) of integers/floats
