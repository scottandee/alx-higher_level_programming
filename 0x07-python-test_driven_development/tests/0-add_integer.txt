>>> add_integer = __import__("0-add_integer").add_integer

>>> add_integer(2, 3)
5

>>> print(add_integer("2", 0))
Traceback (most recent call last):
 File "<stdin>", line 1, in <module>
 File "<stdin>", line 3, in add_integer
TypeError: a must be an integer

>>> print(add_integer(10.3, 0))
10
>>> print(add_integer(10.3, 10.3))
20

>>> print(add_integer(-5, -2))
-7
>>> add_integer(True, -2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer

>>> add_integer(None, -2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer

>>> add_integer(2)
100

>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(10.67789879990, 0)
10
